ucliGUI::start /afs/umich.edu/user/x/m/xmguo/Documents/470/group5/verilog/RS/dve -ucligui +vc +memcbk
set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /afs/umich.edu/user/x/m/xmguo/Documents/470/group5/verilog/RS/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD1
set ::dve_fid VPD1
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket beyster1695p22.engin.umich.edu 50150
synUtils::sendTool -active {_icl_start_rpc -version "H-2013.06-SP1_Full64" -sync_file /tmp/vcs_dve_rpc.xmguo.27805}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.xmguo.27805}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Mon Mar 9 01:09:01 2015
# Designs open: 1
#   Sim: /afs/umich.edu/user/x/m/xmguo/Documents/470/group5/verilog/RS/dve
# Toplevel windows open: 3
# 	TopLevel.1
# 	TopLevel.2
# 	TopLevel.3
#   Source.1: testbench
#   Wave.1: 32 signals
#   Wave.2: 48 signals
#   Group count = 2
#   Group Group1 signal count = 32
#   Group Group2 signal count = 48
# End_DVE_Session_Save_Info
# DVE version: H-2013.06-SP1_Full64
# DVE build date: Nov 27 2013 21:25:23
#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">
# Application preferences
#<WindowLayout>
# DVE top-level session
# Create and position top-level window: TopLevel.1
set TopLevel.1 TopLevel.1
# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Console.1 Console.1
# MDI window settings
set Source.1 Source.1
# End MDI window settings
# Create and position top-level window: TopLevel.2
set TopLevel.2 TopLevel.2
# Docked window settings
# MDI window settings
set Wave.1 Wave.1
# End MDI window settings
# Create and position top-level window: TopLevel.3
set TopLevel.3 TopLevel.3
# Docked window settings
# MDI window settings
set Wave.2 Wave.2
# End MDI window settings
#</WindowLayout>
#<Database>
#</Database>
# DVE Global setting session:
# Global: Breakpoints
# Global: Bus
# Global: Expressions
# Global: Signal Time Shift
# Global: Signal Compare
# Global: Signal Groups
synopsys::dump -add {testbench.dut} -scope "." -depth 1 -fid VPD1
synopsys::dump -add {testbench} -scope "." -depth 1 -fid VPD1
set _session_group_1 Group1
set Group1 "$_session_group_1"
set _session_group_2 Group2
set Group2 "$_session_group_2"
# Global: Highlighting
# Global: Stack
synopsys::xml {set_only_active_frame <data value="1" />}
# Post database loading setting...
# Restore C1 time
# Save global setting...
# Wave/List view global setting
# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {     if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {         gui_close_window -window $__top     } }
# DVE View/pane content session:
# Hier 'Hier.1'
catch {gui_list_expand -id ${Hier.1} testbench}
catch {gui_list_select -id ${Hier.1} {testbench.dut}}
# Data 'Data.1'
catch { gui_list_select -id ${Data.1} {testbench.dut.clock testbench.dut.reset testbench.dut.ROB_branch_mispredict_in testbench.dut.ROB_ROB_num_in testbench.dut.ex_MULT_busy_in testbench.dut.ex_CDB_arb_stall_in testbench.dut.id_rs_srcA_valid_in testbench.dut.id_rs_srcB_valid_in testbench.dut.id_rs_valid_inst_in testbench.dut.id_rs_uncond_branch_in testbench.dut.id_rs_cond_branch_in testbench.dut.id_rs_cpuid_in testbench.dut.id_rs_illegal_in testbench.dut.id_rs_halt_in testbench.dut.id_rs_opa_select_in testbench.dut.id_rs_opb_select_in testbench.dut.id_rs_opcode_in testbench.dut.id_rs_IR_in testbench.dut.id_rs_PC_plus_4_in testbench.dut.id_rs_predicted_target_addr_in testbench.dut.id_rs_srcA_PRF_num_in testbench.dut.id_rs_srcB_PRF_num_in testbench.dut.id_rs_dest_PRF_num_in testbench.dut.ex_CDB_tag_in testbench.dut.RS_full_out testbench.dut.RS_valid_inst_out testbench.dut.RS_uncond_branch_out testbench.dut.RS_cond_branch_out testbench.dut.RS_cpuid_out testbench.dut.RS_illegal_out testbench.dut.RS_halt_out testbench.dut.RS_opa_select_out testbench.dut.RS_opb_select_out testbench.dut.RS_opcode_out testbench.dut.RS_IR_out testbench.dut.RS_PC_plus_4_out testbench.dut.RS_predicted_target_addr_out testbench.dut.RS_srcA_PRF_num_out testbench.dut.RS_srcB_PRF_num_out testbench.dut.RS_dest_PRF_num_out testbench.dut.RS_ROB_num_out testbench.dut.free_list testbench.dut.choose_list testbench.dut.issue_list testbench.dut.wr_en testbench.dut.issue_en testbench.dut.srcA_valid_in testbench.dut.srcB_valid_in }}
# Source 'Source.1'
# View 'Wave.1'
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
# View 'Wave.2'
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.2}]} { 	gui_set_active_window -window ${TopLevel.2} 	gui_set_active_window -window ${Wave.1} }
if {[gui_exist_window -window ${TopLevel.1}]} { 	gui_set_active_window -window ${TopLevel.1} 	gui_set_active_window -window ${Source.1} 	gui_set_active_window -window ${DLPane.1} }
if {[gui_exist_window -window ${TopLevel.3}]} { 	gui_set_active_window -window ${TopLevel.3} 	gui_set_active_window -window ${Wave.2} }
#</Session>
synopsys::run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
